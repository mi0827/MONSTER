#include "src/WinMain.h"
#include "Vector2.h"

//---------------------------------------------------------------------------------
//	コンストラクタ
//---------------------------------------------------------------------------------
Vector2::Vector2()
{
	x = 0.0f;
	y = 0.0f;
}
Vector2::Vector2( float x, float y )
{
	this->x = x;
	this->y = y;
}
//---------------------------------------------------------------------------------
//	ゼロ初期化
//---------------------------------------------------------------------------------
void Vector2::clear()
{
	x = 0.0f;
	y = 0.0f;
}
//---------------------------------------------------------------------------------
//	値のセット
//---------------------------------------------------------------------------------
void Vector2::set( float x, float y )
{
	this->x = x;
	this->y = y;
}
//---------------------------------------------------------------------------------
//	値のセット
//---------------------------------------------------------------------------------
void Vector2::set( Vector2 &v )
{
	x = v.x;
	y = v.y;
}
//---------------------------------------------------------------------------------
//	長さ取得
//---------------------------------------------------------------------------------
float Vector2::GetLength()
{
	return sqrtf( x * x + y * y );
}
//---------------------------------------------------------------------------------
//	正規化（ベクトルの長さを１にする）
//---------------------------------------------------------------------------------
void Vector2::normalize()
{
	float length = GetLength();
	if( length > 0.0f )
	{
		x = x / length;
		y = y / length;
	}
}
//---------------------------------------------------------------------------------
//	長さ設定
//---------------------------------------------------------------------------------
void Vector2::SetLength( float length )
{
	normalize();
	x = x * length;
	y = y * length;
}

//---------------------------------------------------------------------------------
//	= 演算子のオーバーロード
//---------------------------------------------------------------------------------
Vector2& Vector2::operator = ( const Vector2 &v )
{
	x = v.x;
	y = v.y; 
	return *this; 
}
//---------------------------------------------------------------------------------
//	+= 演算子のオーバーロード
//---------------------------------------------------------------------------------
Vector2& Vector2::operator += ( const Vector2 &v )
{
	x += v.x;
	y += v.y;
	return *this;
}
//---------------------------------------------------------------------------------
//	-= 演算子のオーバーロード
//---------------------------------------------------------------------------------
Vector2& Vector2::operator -= ( const Vector2 &v )
{
	x -= v.x;
	y -= v.y;
	return *this;
}
//---------------------------------------------------------------------------------
//	*= 演算子のオーバーロード
//---------------------------------------------------------------------------------
Vector2& Vector2::operator *= ( const float f )
{
	x *= f;
	y *= f;
	return *this;
}
//---------------------------------------------------------------------------------
//	/= 演算子のオーバーロード
//---------------------------------------------------------------------------------
Vector2& Vector2::operator /= ( const float f )
{
	x /= f;
	y /= f;
	return *this;
}

//---------------------------------------------------------------------------------
//	+ 演算子のオーバーロード
//---------------------------------------------------------------------------------
Vector2 operator + ( const Vector2 &v0, const Vector2 &v1 )
{
	Vector2 v;
	v.x = v0.x + v1.x;
	v.y = v0.y + v1.y;
	return v;
}
//---------------------------------------------------------------------------------
//	- 演算子のオーバーロード
//---------------------------------------------------------------------------------
Vector2 operator - ( const Vector2 &v0, const Vector2 &v1 )
{
	Vector2 v;
	v.x = v0.x - v1.x;
	v.y = v0.y - v1.y;
	return v;
}
//---------------------------------------------------------------------------------
//	* 演算子のオーバーロード
//---------------------------------------------------------------------------------
Vector2 operator * ( const Vector2 &v, const float f )
{
	Vector2 r;
	r.x = v.x * f;
	r.y = v.y * f;
	return r;
}
//---------------------------------------------------------------------------------
//	/ 演算子のオーバーロード
//---------------------------------------------------------------------------------
Vector2 operator / ( const Vector2 &v, const float f )
{
	Vector2 r;
	r.x = v.x / f;
	r.y = v.y / f;
	return r;
}

//---------------------------------------------------------------------------------
//	２つの Vector2 の距離を求める
//---------------------------------------------------------------------------------
float GetVector2Distance( Vector2 &p0, Vector2 &p1 )
{
	Vector2 v = p0 - p1;
	return v.GetLength();
}
//---------------------------------------------------------------------------------
//	２つの Vector2 の内積を求める
//---------------------------------------------------------------------------------
float GetVector2Dot( Vector2 &v0, Vector2 &v1 )
{
	return v0.x * v1.x + v0.y * v1.y;
}
//---------------------------------------------------------------------------------
//	２つの Vector2 の外積を求める
//---------------------------------------------------------------------------------
float GetVector2Cross( Vector2 &v0, Vector2 &v1 )
{
	return v0.x * v1.y - v0.y * v1.x;
}
