#include "src/WinMain.h"
#include "src/Sound/Sound.h"

//---------------------------------------------------------------------------
// コンストラクタ
//---------------------------------------------------------------------------
Sound::Sound()
{
}

//---------------------------------------------------------------------------
// デストラクタ
//---------------------------------------------------------------------------
Sound::~Sound()
{
	// 読み込んだサウンドの削除
	InitSoundMem();        
	// サウンドの入れ物を解放する
	m_sound_handle.clear();
}

//---------------------------------------------------------------------------
// サウンド分の配列を作る関数
//---------------------------------------------------------------------------
void Sound::NewArraySecureSound(int sound_max)
{
	// サウンドの最大数を保存
	m_sound_max = sound_max;
	// サウンドの数分の配列を確保
	m_sound_handle.resize(m_sound_max);
}

//---------------------------------------------------------------------------
// サウンドの読み込み
//---------------------------------------------------------------------------
void Sound::LoadSound(const char path[256], int no)
{
	// サウンドの読み込み
	m_sound_handle[no] = LoadSoundMem(path);
}

//---------------------------------------------------------------------------
// サウンドの再生
//---------------------------------------------------------------------------
void Sound::PlaySound_(int no, int type, bool loop)
{
	// サウンドの再生
	PlaySoundMem(m_sound_handle[no], type, loop);
}

//---------------------------------------------------------------------------
// サウンドが再生中がどうかを返す
//---------------------------------------------------------------------------
bool Sound::PlayingSound(int no)
{
	// 現在サウンドが再生中がどうか
	// 再生中               ：  １
	// 再生されていない :  ０
	// エラー                :−１
	return CheckSoundMem(m_sound_handle[no]);
}

//---------------------------------------------------------------------------
// サウンドのボリューム調整用の関数
//---------------------------------------------------------------------------
void Sound::SetSoundVolume(int volume)
{
	for (int i = 0; i < m_sound_max; i++)
	{
		// サウンドのボリューム調整
		ChangeVolumeSoundMem(volume, m_sound_handle[i]);
	}
}
