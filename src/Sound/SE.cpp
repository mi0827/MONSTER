#include "src/WinMain.h"
#include "SE.h"

//---------------------------------------------------------------------------
//  SE用の終了処理
//---------------------------------------------------------------------------
SE::~SE()
{
	SE_Delete();
}

//---------------------------------------------------------------------------
//  SE用の配列変数の獲得用関数
//---------------------------------------------------------------------------
void SE::SE_ContainerNew(int size)
{
	// SE分の配列の確保
	m_se_container = new int[size];
}

//---------------------------------------------------------------------------
//  SEの読み込み用関数
//---------------------------------------------------------------------------
void SE::Load_SE(const char name[256], int No)
{
	// SEデータの読み込み
	m_se_container[No] = LoadSoundMem(name);
}

//---------------------------------------------------------------------------
//  SEの再生用関数
//---------------------------------------------------------------------------
void SE::Play_SE(int No, int type, bool loop)
{
	// SEの再生
	PlaySoundMem(m_se_container[No], type, loop);
}

//---------------------------------------------------------------------------
//  SEのボリューム変更用関数
//---------------------------------------------------------------------------
void SE::SE_ChangeVolume(int se_volume, int size)
{
	// SEの数分ボリュームを変更する
	for (int i = 0; i < size; i++) {
		ChangeVolumeSoundMem(se_volume,m_se_container[i]);
	}
}

//---------------------------------------------------------------------------
//  SEの再生中かを返す用関数
//---------------------------------------------------------------------------
bool SE::Playing_SE(int No)
{
	int playing; // 再生中かの番号を入れる用の変数
	// 再生中か調べる
	// 再生中          ：  １
	// 再生されていない：  ０
	// エラー          ：−１
	playing = CheckSoundMem(m_se_container[No]);
	if (playing == 1) {
		return true;
	}
	return false;
}

//---------------------------------------------------------------------------
// SEのデリート（配列の解放）
//---------------------------------------------------------------------------
void SE::SE_Delete()
{
	InitSoundMem();        // 読み込んだSEの削除
	delete[] m_se_container; // 

}


